#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QView.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="schedule")]
	public partial class ScheduleDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
	#region Extensibility Method Definitions
	partial void OnCreated();
	partial void Insertque(que instance);
	partial void Updateque(que instance);
	partial void Deleteque(que instance);
	#endregion
		
		public ScheduleDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["scheduleConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<que> ques
		{
			get
			{
				return this.GetTable<que>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.que")]
	public partial class que : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _created;
		
		private System.DateTime _modified;
		
		private System.Nullable<System.DateTime> _LastScheduled;
		
		private string _Company;
		
		private string _Type;
		
		private string _Description;
		
		private bool _plate;
		
		private bool _mold;
		
		private System.Nullable<System.DateTime> _PreviousScheduled;
		
		private System.Nullable<char> _plateType;
		
		private string _industry;
		
		private string _lidArt;
		
		private string _bandArt;
		
	#region Extensibility Method Definitions
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnIDChanging(int value);
	partial void OnIDChanged();
	partial void OncreatedChanging(System.DateTime value);
	partial void OncreatedChanged();
	partial void OnmodifiedChanging(System.DateTime value);
	partial void OnmodifiedChanged();
	partial void OnLastScheduledChanging(System.Nullable<System.DateTime> value);
	partial void OnLastScheduledChanged();
	partial void OnCompanyChanging(string value);
	partial void OnCompanyChanged();
	partial void OnTypeChanging(string value);
	partial void OnTypeChanged();
	partial void OnDescriptionChanging(string value);
	partial void OnDescriptionChanged();
	partial void OnplateChanging(bool value);
	partial void OnplateChanged();
	partial void OnmoldChanging(bool value);
	partial void OnmoldChanged();
	partial void OnPreviousScheduledChanging(System.Nullable<System.DateTime> value);
	partial void OnPreviousScheduledChanged();
	partial void OnplateTypeChanging(System.Nullable<char> value);
	partial void OnplateTypeChanged();
	partial void OnindustryChanging(string value);
	partial void OnindustryChanged();
	partial void OnlidArtChanging(string value);
	partial void OnlidArtChanged();
	partial void OnbandArtChanging(string value);
	partial void OnbandArtChanged();
	#endregion
		
		public que()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modified", DbType="DateTime NOT NULL")]
		public System.DateTime modified
		{
			get
			{
				return this._modified;
			}
			set
			{
				if ((this._modified != value))
				{
					this.OnmodifiedChanging(value);
					this.SendPropertyChanging();
					this._modified = value;
					this.SendPropertyChanged("modified");
					this.OnmodifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastScheduled", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastScheduled
		{
			get
			{
				return this._LastScheduled;
			}
			set
			{
				if ((this._LastScheduled != value))
				{
					this.OnLastScheduledChanging(value);
					this.SendPropertyChanging();
					this._LastScheduled = value;
					this.SendPropertyChanged("LastScheduled");
					this.OnLastScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(40)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(40)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plate", DbType="Bit NOT NULL")]
		public bool plate
		{
			get
			{
				return this._plate;
			}
			set
			{
				if ((this._plate != value))
				{
					this.OnplateChanging(value);
					this.SendPropertyChanging();
					this._plate = value;
					this.SendPropertyChanged("plate");
					this.OnplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mold", DbType="Bit NOT NULL")]
		public bool mold
		{
			get
			{
				return this._mold;
			}
			set
			{
				if ((this._mold != value))
				{
					this.OnmoldChanging(value);
					this.SendPropertyChanging();
					this._mold = value;
					this.SendPropertyChanged("mold");
					this.OnmoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousScheduled", DbType="DateTime")]
		public System.Nullable<System.DateTime> PreviousScheduled
		{
			get
			{
				return this._PreviousScheduled;
			}
			set
			{
				if ((this._PreviousScheduled != value))
				{
					this.OnPreviousScheduledChanging(value);
					this.SendPropertyChanging();
					this._PreviousScheduled = value;
					this.SendPropertyChanged("PreviousScheduled");
					this.OnPreviousScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateType", DbType="Char(1)")]
		public System.Nullable<char> plateType
		{
			get
			{
				return this._plateType;
			}
			set
			{
				if ((this._plateType != value))
				{
					this.OnplateTypeChanging(value);
					this.SendPropertyChanging();
					this._plateType = value;
					this.SendPropertyChanged("plateType");
					this.OnplateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_industry", DbType="VarChar(20)")]
		public string industry
		{
			get
			{
				return this._industry;
			}
			set
			{
				if ((this._industry != value))
				{
					this.OnindustryChanging(value);
					this.SendPropertyChanging();
					this._industry = value;
					this.SendPropertyChanged("industry");
					this.OnindustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lidArt", DbType="VarChar(50)")]
		public string lidArt
		{
			get
			{
				return this._lidArt;
			}
			set
			{
				if ((this._lidArt != value))
				{
					this.OnlidArtChanging(value);
					this.SendPropertyChanging();
					this._lidArt = value;
					this.SendPropertyChanged("lidArt");
					this.OnlidArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bandArt", DbType="VarChar(50)")]
		public string bandArt
		{
			get
			{
				return this._bandArt;
			}
			set
			{
				if ((this._bandArt != value))
				{
					this.OnbandArtChanging(value);
					this.SendPropertyChanging();
					this._bandArt = value;
					this.SendPropertyChanged("bandArt");
					this.OnbandArtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
